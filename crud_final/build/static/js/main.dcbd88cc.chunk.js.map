{"version":3,"sources":["components/navbar.js","components/employeeList.js","components/employeeAdd.js","components/employeeEdit.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","Component","Employee","props","scope","employee","name","phoneNumber","designation","_id","onClick","deleteEmployee","employeeList","id","axios","delete","then","res","console","log","setState","databaseArr","state","filter","elem","giveList","map","key","get","data","length","this","employeeAdd","onChangeName","e","target","value","onChangePhoneNumber","onChangeDesignation","onSubmission","preventDefault","post","onSubmit","htmlFor","onChange","type","employeeEdit","window","location","href","substring","catch","err","App","path","exact","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.dcbd88cc.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <nav className='navbar navbar-dark bg-dark navbar-expand-lg'>\r\n        <ul className='navbar-nav mr-auto'>\r\n          <li className='navbar-item m-1'>\r\n            <Link className='navbar-brand' to='/'>\r\n              Employees list\r\n            </Link>\r\n          </li>\r\n          <li className='navbar-item m-1'>\r\n            <Link className='navbar-brand' to='/add'>\r\n              Add new\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Employee = (props) => (\r\n  <tr>\r\n    <th scope='col'>{props.employee.name}</th>\r\n    <th scope='col'>{props.employee.phoneNumber}</th>\r\n    <th scope='col'>{props.employee.designation}</th>\r\n    <th scope='col'>\r\n      <Link to={\"/update/\" + props.employee._id}>Edit</Link>\r\n      <button\r\n        className='btn-sm btn-danger ml-2'\r\n        onClick={() => {\r\n          props.deleteEmployee(props.employee._id);\r\n        }}>\r\n        Delete\r\n      </button>\r\n    </th>\r\n  </tr>\r\n);\r\n\r\nexport default class employeeList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      databaseArr: [],\r\n    };\r\n\r\n    axios.get(\"http://localhost:5001/employees/\").then((res) => {\r\n      if (res.data.length > 0) {\r\n        this.setState({\r\n          databaseArr: res.data,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteEmployee = (id) => {\r\n    axios\r\n      .delete(\"http://localhost:5001/employees/\" + id)\r\n      .then((res) => console.log(res));\r\n    this.setState({\r\n      databaseArr: this.state.databaseArr.filter((elem) => elem._id != id),\r\n    });\r\n  };\r\n\r\n  giveList = () => {\r\n    return this.state.databaseArr.map((elem) => {\r\n      return (\r\n        <Employee\r\n          employee={elem}\r\n          deleteEmployee={this.deleteEmployee}\r\n          key={elem._id}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <table className='table table-striped'>\r\n          <thead>\r\n            <tr>\r\n              <th scope='col'>\r\n                <strong>Name</strong>\r\n              </th>\r\n              <th scope='col'>\r\n                <strong>Phone number</strong>\r\n              </th>\r\n              <th scope='col'>\r\n                <strong>Designation</strong>\r\n              </th>\r\n              <th scope='col'></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{this.giveList()}</tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport axios from \"axios\";\r\n\r\nexport default class employeeAdd extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      phoneNumber: \"\",\r\n      designation: \"\",\r\n    };\r\n  }\r\n\r\n  onChangeName = (e) => {\r\n    this.setState({ name: e.target.value });\r\n  };\r\n\r\n  onChangePhoneNumber = (e) => {\r\n    this.setState({ phoneNumber: e.target.value });\r\n  };\r\n\r\n  onChangeDesignation = (e) => {\r\n    this.setState({ designation: e.target.value });\r\n  };\r\n\r\n  onSubmission = (e) => {\r\n    e.preventDefault();\r\n    const employee = {\r\n      name: this.state.name,\r\n      phoneNumber: this.state.phoneNumber,\r\n      designation: this.state.designation,\r\n    };\r\n\r\n    console.log(employee);\r\n\r\n    axios\r\n      .post(\"http://localhost:5001/employees/add\", employee)\r\n      .then((employee) => console.log(employee));\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      phoneNumber: \"\",\r\n      designation: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='container'>\r\n        <h1>Add new employee</h1>\r\n        <form onSubmit={this.onSubmission}>\r\n          <div className='form-group'>\r\n            <label htmlFor='formGroupExampleInput'>Name</label>\r\n            <input\r\n              value={this.state.name}\r\n              onChange={this.onChangeName}\r\n              type='text'\r\n              className='form-control'\r\n              id='formGroupExampleInput'\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor='formGroupExampleInput2'>Phone Number</label>\r\n            <input\r\n              value={this.state.phoneNumber}\r\n              onChange={this.onChangePhoneNumber}\r\n              type='text'\r\n              className='form-control'\r\n              id='formGroupExampleInput2'\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor='formGroupExampleInput2'>Designation</label>\r\n            <input\r\n              value={this.state.designation}\r\n              onChange={this.onChangeDesignation}\r\n              type='text'\r\n              className='form-control'\r\n              id='formGroupExampleInput2'\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <input type='submit' className='btn btn-primary' />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport axios from \"axios\";\r\n\r\nexport default class employeeEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      phoneNumber: \"\",\r\n      designation: \"\",\r\n    };\r\n\r\n    axios\r\n      .get(\r\n        \"http://localhost:5001/employees/\" + window.location.href.substring(31)\r\n      )\r\n      .then((res) => {\r\n        this.setState({\r\n          name: res.data.name,\r\n          phoneNumber: res.data.phoneNumber,\r\n          designation: res.data.designation,\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  onChangeName = (e) => {\r\n    this.setState({ name: e.target.value });\r\n  };\r\n\r\n  onChangePhoneNumber = (e) => {\r\n    this.setState({ phoneNumber: e.target.value });\r\n  };\r\n\r\n  onChangeDesignation = (e) => {\r\n    this.setState({ designation: e.target.value });\r\n  };\r\n\r\n  onSubmission = (e) => {\r\n    e.preventDefault();\r\n    const employee = {\r\n      name: this.state.name,\r\n      phoneNumber: this.state.phoneNumber,\r\n      designation: this.state.designation,\r\n    };\r\n\r\n    console.log(employee);\r\n\r\n    axios\r\n      .post(\r\n        \"http://localhost:5001/employees/update/\" +\r\n          window.location.href.substring(31),\r\n        employee\r\n      )\r\n      .then((employee) => console.log(employee));\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      phoneNumber: \"\",\r\n      designation: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='container'>\r\n        <form onSubmit={this.onSubmission}>\r\n          <div className='form-group'>\r\n            <label htmlFor='formGroupExampleInput'>Name</label>\r\n            <input\r\n              value={this.state.name}\r\n              onChange={this.onChangeName}\r\n              type='text'\r\n              className='form-control'\r\n              id='formGroupExampleInput'\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor='formGroupExampleInput2'>Phone Number</label>\r\n            <input\r\n              value={this.state.phoneNumber}\r\n              onChange={this.onChangePhoneNumber}\r\n              type='text'\r\n              className='form-control'\r\n              id='formGroupExampleInput2'\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor='formGroupExampleInput2'>Designation</label>\r\n            <input\r\n              value={this.state.designation}\r\n              onChange={this.onChangeDesignation}\r\n              type='text'\r\n              className='form-control'\r\n              id='formGroupExampleInput2'\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <input type='submit' className='btn btn-primary' />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nimport Navbar from \"./components/navbar\";\nimport employeeList from \"./components/employeeList\";\nimport employeeAdd from \"./components/employeeAdd\";\nimport employeeEdit from \"./components/employeeEdit\";\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <br />\n      <Route path='/' exact component={employeeList} />\n      <Route path='/add' component={employeeAdd} />\n      <Route path='/update' component={employeeEdit} />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}